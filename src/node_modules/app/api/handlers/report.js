import {find} from "app/core/utils"
import random from "app/core/utils/random"
import {findBySource as findGeosBySource} from "app/core/models/geo"
import {createResult as createGeoResult} from "app/core/models/geoResult"
import reports from "app/web/mock/reports"

const rng = random()

export function getReport(request, reply) {
  reply(find(reports, "id", +request.params.id))
}

export function getReportViewData(request, reply) {
  const report = find(reports, "id", +request.params.id)
  const view = find(report.views, "id", +request.params.viewId)
  if (!view.layers) {
    reply(view)
    return
  }
  const sessionId = +request.query.sessionId
  const resultId = +request.query.resultId
  const promiseBySource = {}
  const promises = view.layers.map(({source}) => {
    return promiseBySource[source] || (promiseBySource[source] = findGeosBySource(source))
  })
  Promise.all(promises).then(geosData => {
    const data = view.layers.map((layer, index) => {
      const geos = geosData[index]
      const layerData = {}
      geos.forEach(geo => {
        layerData[geo.code] = rng.natural({min: 1, max: 4})
      })
      return layerData
    })
    return createGeoResult(sessionId, resultId, data)
  }).then(() => reply(view))
}
