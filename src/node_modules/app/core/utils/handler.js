import tv4 from "tv4"
import {createLogger} from "bunyan"
import {create as createError} from "boom"
import {isUndefined, isNull} from "app/core/utils"

const log = createLogger({name: "handler"})

export function handlePromise(handler, schema) {
  return (request, reply) => {
    const handleError = error => {
      if (!isUndefined(error.data) && !isNull(error.data)) {
        log.error(error, {
          data: error.data
        })
      } else {
        log.error(error)
      }
      reply(error)
    }
    if (schema) {
      const result = tv4.validateResult(request.payload, schema)
      if (!result.valid) {
        handleError(createError(400, "Invalid request"))
        return
      }
    }
    Promise.resolve(handler(request))
    .then(response => {
      if (handler.done) {
        handler.done(reply, response)
      } else {
        reply(response)
      }
    })
    .catch(handleError)
  }
}
