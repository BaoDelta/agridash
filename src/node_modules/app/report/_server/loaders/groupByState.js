import _ from "lodash"
import {findAll as findAllStates} from "app/models/state"
import {findByParams as findCommodityValuesByParams} from "app/models/nass/commodityValue"

function groupByState(config) {
  _.defaults(config, {
    showAllSurveyStates: false,
    showOtherStates: false,
    showUSTotal: true
  })
  const promises = []
  config.fields.forEach(field => {
    if (field.source === "NASS") {
      promises.push(findCommodityValuesByParams(field.params))
    } else {
      throw new Error("Unsupported source: " + field.source)
    }
  })
  promises.push(findAllStates())
  return Promise.all(promises).then(data => {
    const records = []
    const recordById = {}
    _.last(data).forEach(state => {
      const record = {
        id: state.id,
        name: state.name
      }
      records.push(record)
      recordById[record.id] = record
    })
    config.fields.forEach((field, index) => {
      data[index].forEach(commodityValue => {
        const record = recordById[commodityValue.stateid]
        record[field.id] = commodityValue.value
      })
    })
    return records
  })
}

export default groupByState
