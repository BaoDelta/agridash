import {Server} from "hapi"
import {createLogger} from "bunyan"
import config from "app/config"
import * as web from "app/web"
import * as api from "app/api"
import * as tile from "app/tile"
import * as proxy from "app/proxy"

const log = createLogger({name: "server"})

const server = new Server()
server.connection({
  labels: ["web"],
  host: config.web.host,
  port: config.web.port
})
server.connection({
  labels: ["api"],
  host: config.api.host,
  port: config.api.port
})
server.connection({
  labels: ["tile"],
  host: config.tile.host,
  port: config.tile.port
})

function handleError(error) {
  if (error) {
    throw error
  }
}

server.select("web").register([web, proxy], handleError)
server.select("api").register(api, handleError)
server.select("tile").register(tile, handleError)

server.start(() => {
  server.connections.forEach(connection => {
    log.info({
      [connection.settings.labels[0]]: connection.info.uri
    })
    if (config.debug.showRoutes) {
      log.info({
        routes: connection.table().map(route => route.path)
      })
    }
  })
})
