import path from "path"
import fs from "fs"
import mapnik from "mapnik"
import SphericalMercator from "sphericalmercator"
import config from "app/config"
import {assign} from "app/core/utils"

mapnik.register_default_input_plugins()

const styles = fs.readFileSync(path.join(__dirname, "bubble.xml"), "utf8")
const merc = new SphericalMercator()

const postgisConfig = {
  type: "postgis",
  "simplify_geometries": true,
  srid: 3857,
  host: config.database.host,
  dbname: config.database.name,
  user: config.database.user,
  password: config.database.password,
  extent: config.tile.extent
}

const query = "select pos from geo"
const layer = new mapnik.Layer("bubble")
layer.datasource = new mapnik.Datasource(assign({
  table: "(" + query + ") result",
  "geometry_table": "geo",
  "geometry_field": "pos"
}, postgisConfig))
layer.styles = ["bubble"]

export function renderImage(request, reply) {
  const map = new mapnik.Map(256, 256)
  map.bufferSize = 128
  map.fromString(styles, () => {
    const {x, y, z} = request.params
    map.extent = merc.bbox(+x, +y, +z, false, "900913")
    map.add_layer(layer)
    const image = new mapnik.Image(map.width, map.height)
    map.render(image, () => {
      reply(image.encodeSync("png")).type("image/png")
    })
  })
}
