import mapnik from "mapnik"
import SphericalMercator from "sphericalmercator"
import config from "app/config"
import {assign} from "app/core/utils"

mapnik.register_default_input_plugins()

const merc = new SphericalMercator()

const postgisConfig = {
  type: "postgis",
  "simplify_geometries": true,
  srid: 3857,
  host: config.database.host,
  dbname: config.database.name,
  user: config.database.user,
  password: config.database.password,
  extent: config.tile.extent
}

export function renderImage(options) {
  const dataSource = options.getDataSource()
  const layer = new mapnik.Layer(options.name)
  layer.datasource = new mapnik.Datasource(assign({
    table: "(" + dataSource.query + ") result",
    "geometry_table": dataSource.table,
    "geometry_field": dataSource.column
  }, postgisConfig))
  layer.styles = dataSource.styles
  return (request, reply) => {
    const map = new mapnik.Map(256, 256)
    if (options.bufferSize) {
      map.bufferSize = options.bufferSize
    }
    map.fromString(options.mapStyles, () => {
      const {x, y, z} = request.params
      map.extent = merc.bbox(+x, +y, +z, false, "900913")
      map.add_layer(layer)
      const image = new mapnik.Image(map.width, map.height)
      map.render(image, () => {
        reply(image.encodeSync("png")).type("image/png")
      })
    })
  }
}
