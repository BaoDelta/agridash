import bcrypt from "bcryptjs"
import {create as createError} from "boom"
import {findByUsername} from "app/core/models/user"

export function login(request) {
  const {username, password} = request.payload
  return findByUsername(username, true).then(user => new Promise((resolve, reject) => {
    if (!user) {
      reject(createError(401, "Invalid username or password", {[username]: "User not found"}))
      return
    }
    setTimeout(() => {
      bcrypt.compare(password, user.hash, (err, result) => {
        if (err) {
          reject(err)
          return
        }
        if (!result) {
          reject(createError(401, "Invalid username or password", {[username]: "Password does not match"}))
          return
        }
        request.auth.session.set({
          username
        })
        resolve(findByUsername(username))
      })
    }, 1000)
  }))
}

export function logout(request, reply) {
  request.auth.session.clear()
  reply.redirect("/")
}
