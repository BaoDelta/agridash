import {getSessionId} from "app/core/models/session"
import {findByUsername as findUserByUsername} from "app/core/models/user"
import config from "app/config"

const {libs, cache} = config.cdn
const {publicPath} = config.webpack
const clientConfig = {
  apiUrl: config.api.url,
  tileUrl: config.tile.url
}

const styles = []
const scripts = []
libs.forEach(lib => {
  if (lib.styles) {
    lib.styles.forEach(style => {
      styles.push(`${cache || lib.url}/${style}`)
    })
  }
  if (lib.scripts) {
    lib.scripts.forEach(script => {
      scripts.push(`${cache || lib.url}/${script}`)
    })
  }
})

function renderTemplate(user, sessionId) {
  return `<!DOCTYPE html>
    <html lang="en">
      <head>
        <meta charset="utf-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>
        <meta http-equiv="x-ua-compatible" content="ie=edge"/>
        <title>AgriDash</title>
        <link type="image/x-icon" rel="icon" href="/favicon.ico"/>
        ${styles.map(style => `
          <link type="text/css" rel="stylesheet" href="${style}"/>
        `).join("")}
      </head>
      <body>
        <div id="appContent"></div>
        <script type="text/javascript">
          window.appInfo = ${JSON.stringify({
            ...clientConfig,
            user,
            sessionId
          })}
        </script>
        ${scripts.map(script => `
          <script type="text/javascript" src="${script}"></script>
        `).join("")}
        <script type="text/javascript" src="${publicPath}vendors.js"></script>
        <script type="text/javascript" src="${publicPath}app.js"></script>
      </body>
    </html>`
}

function renderReact(request, reply) {
  return getSessionId()
  .then(sessionId => {
    if (request.auth.isAuthenticated) {
      return findUserByUsername(request.auth.credentials.username)
      .then(user => renderTemplate(user, sessionId))
    }
    return renderTemplate(null, sessionId)
  })
  .then(response => {
    reply(response)
  })
}

export default renderReact
