import React from "react"
import cx from "classnames"
import styles from "app/web/views/Report.css"
import NavLink from "app/web/views/NavLink"
import Icon from "app/web/views/Icon"
import Loading from "app/web/views/Loading"
import MapView from "app/web/views/MapView"
import ListView from "app/web/views/ListView"
import BarChartView from "app/web/views/BarChartView"
import LineChartView from "app/web/views/LineChartView"
import AreaChartView from "app/web/views/AreaChartView"
import FilterModal from "app/web/views/FilterModal"
import {find} from "app/core/utils"
import {get} from "app/core/utils/ajax"
import reports from "app/web/mock/reports"

const {Component, PropTypes} = React

const viewByType = {
  map: {
    icon: "map-o",
    component: MapView
  },
  list: {
    icon: "list-ul",
    component: ListView
  },
  trendsBar: {
    icon: "bar-chart",
    component: BarChartView
  },
  trendsLine: {
    icon: "line-chart",
    component: LineChartView
  },
  trendsArea: {
    icon: "area-chart",
    component: AreaChartView
  }
}

let nextRequestId = 1

class Report extends Component {

  static propTypes = {
    params: PropTypes.object.isRequired
  }

  state = {}

  componentDidMount() {
    this.requestData(this.props)
  }

  componentWillReceiveProps(nextProps) {
    this.requestData(nextProps)
  }

  requestData({params}) {
    const {clientConfig} = window
    const {apiUrl, sessionId} = clientConfig
    const resultId = +`${nextRequestId++}2014`
    this.setState({
      data: null,
      resultId
    })
    get(`${apiUrl}/report/${params.id}/view/${params.viewId}/data`, {
      sessionId,
      resultId
    }).then(data => {
      this.setState({
        data
      })
    })
  }

  render() {
    const {params} = this.props
    const {resultId, data} = this.state
    const report = find(reports, "id", +params.id)
    const activeViewId = +params.viewId
    const activeView = find(report.views, "id", activeViewId)
    const ViewComponent = viewByType[activeView.type].component
    return <div>
      <div className="row">
        <div className="col-sm-4 col-md-3">
          <div className="text-center m-y-md">
            <h3>{report.name}</h3>
          </div>
          <ul className="nav nav-pills nav-stacked m-b">
            {report.views.map(view => <NavLink key={view.id} to={`/report/${report.id}/view/${view.id}`}
                className={cx(view.id === activeViewId && "active")}>
              <Icon icon={viewByType[view.type].icon} fw/> {view.name}
            </NavLink>)}
          </ul>
        </div>
        <div className="col-sm-8 col-md-9">
          <div className={styles.view}>
            {data ? <ViewComponent report={report} view={activeView} resultId={resultId}/> : <Loading/>}
          </div>
        </div>
      </div>
      <FilterModal/>
    </div>
  }

}

export default Report
